[{"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\Profile.tsx":"1","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts\\Post\\Post.tsx":"2","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts.tsx":"3","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\App.tsx":"4","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Dialogues.tsx":"5","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Navbar\\Navbar.tsx":"6","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\index.tsx":"7","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Header\\Header.tsx":"8","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\reportWebVitals.ts":"9","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\ProfileInfo\\ProfileInfo.tsx":"10","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\DialogueItem\\DialoguesItem.tsx":"11","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Message\\Message.tsx":"12","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\store.tsx":"13","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\sidebar-reducer.tsx":"14","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\dialogues-reducer.tsx":"15","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\profile-reducer.tsx":"16","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\redux-store.tsx":"17"},{"size":595,"mtime":1614418930170,"results":"18","hashOfConfig":"19"},{"size":541,"mtime":1611170080048,"results":"20","hashOfConfig":"19"},{"size":1431,"mtime":1614013683621,"results":"21","hashOfConfig":"19"},{"size":1290,"mtime":1613850097012,"results":"22","hashOfConfig":"19"},{"size":1767,"mtime":1614430779826,"results":"23","hashOfConfig":"19"},{"size":956,"mtime":1610886282674,"results":"24","hashOfConfig":"19"},{"size":574,"mtime":1613157417867,"results":"25","hashOfConfig":"19"},{"size":387,"mtime":1612006461743,"results":"26","hashOfConfig":"19"},{"size":425,"mtime":1609765361984,"results":"27","hashOfConfig":"19"},{"size":566,"mtime":1611082047188,"results":"28","hashOfConfig":"19"},{"size":418,"mtime":1611342614814,"results":"29","hashOfConfig":"19"},{"size":286,"mtime":1611417817170,"results":"30","hashOfConfig":"19"},{"size":2019,"mtime":1614419095174,"results":"31","hashOfConfig":"19"},{"size":393,"mtime":1613916573358,"results":"32","hashOfConfig":"19"},{"size":1774,"mtime":1614418930225,"results":"33","hashOfConfig":"19"},{"size":1617,"mtime":1614428141339,"results":"34","hashOfConfig":"19"},{"size":867,"mtime":1614430734740,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kxwy9c",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\Profile.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts\\Post\\Post.tsx",["80"],"import React from 'react';\nimport s from './Post.module.css';\n\ntype MessageType = {\n    message: string;\n    likesCount: number;\n}\n\nconst Post: React.FC<MessageType> = (props) => {\n    return (\n        <div className={s.item}>\n            <div>\n                <img src=\"https://image.tmdb.org/t/p/w300_and_h450_bestv2/guNQz8J5NFsBrUS8JwXVoB8yvCE.jpg\"/>\n                {props.message}\n            </div>\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\App.tsx",["81"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Dialogues.tsx",["82"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Navbar\\Navbar.tsx",[],["83","84"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\index.tsx",[],["85","86"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Header\\Header.tsx",["87"],"import React from 'react';\nimport s from './Header.module.css'\n\nconst Header = () => {\n    return (\n        <header className={s.header}>\n            <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Unofficial_JavaScript_logo.svg/480px-Unofficial_JavaScript_logo.svg.png\"\n                alt=\"image\"/>\n        </header>\n    )\n}\n\nexport default Header;\n",["88","89"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\reportWebVitals.ts",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],["90","91"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\DialogueItem\\DialoguesItem.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Message\\Message.tsx",["92"],"import React from 'react';\nimport s from \"./../Dialogues.module.css\";\nimport state from \"../../Redux/state\";\n\ntype MessageType = {\n    message: string\n}\nconst Message = (props: MessageType) => {\n    return <div className={s.message}>{props.message}</div>\n    }\n\nexport default Message;\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\store.tsx",["93","94","95","96"],"import profileReducer, {\r\n    addPostActionCreator, initialProfileState,\r\n    ProfileActionsType,\r\n    UpdateNewPostTextActionCreator\r\n} from \"./profile-reducer\";\r\nimport dialoguesReducer, {\r\n    DialogsActionsTypes, InitialDialogState,\r\n    SendMessageCreator,\r\n    UpdateNewMessageBodyCreator\r\n} from \"./dialogues-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nexport type MessageType = {\r\n    id: number,\r\n    message: string\r\n}\r\nexport type DialoguesType = {\r\n    id: number,\r\n    name: string\r\n}\r\nexport type PostType = {\r\n    id: number,\r\n    message: string,\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\nexport type DialoguePageType = {\r\n    dialogues: Array<DialoguesType>\r\n    messages: Array<MessageType>\r\n    newMessageBody: string\r\n}\r\nexport type SidebarType = {}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialoguesPage: DialoguePageType\r\n    sidebar: SidebarType\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _callSubscriber: () => void\r\n    subscribe: (observer: () => void) => void\r\n    getState: () => RootStateType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\n\r\nexport type ActionTypes = ProfileActionsType & DialogsActionsTypes\r\n\r\nconst store: StoreType = {\r\n    _state: {\r\n        profilePage: initialProfileState,\r\n        dialoguesPage: InitialDialogState,\r\n        sidebar: sidebarReducer\r\n    },\r\n    _callSubscriber() {\r\n        console.log(\"State changed\")\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n    dispatch(action: ActionTypes) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialoguesPage = dialoguesReducer(this._state.dialoguesPage, action);\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n        this._callSubscriber();\r\n    }\r\n}\r\n\r\nexport default store;\r\n",["97","98"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\sidebar-reducer.tsx",["99","100","101"],"import dialoguesReducer from \"./dialogues-reducer\";\r\nimport {DialoguesType, MessageType} from \"./state\";\r\n\r\n\r\ntype InitialSidebarType = {};\r\n\r\nexport const InitialSidebarState = {};\r\n\r\nconst sidebarReducer = (state: InitialSidebarType = InitialSidebarState, action: ActionsSidebarType) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;\r\n\r\nexport type ActionsSidebarType = any;\r\n\r\n\r\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\dialogues-reducer.tsx",["102"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\profile-reducer.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\redux-store.tsx",[],{"ruleId":"103","severity":1,"message":"104","line":13,"column":17,"nodeType":"105","endLine":13,"endColumn":109},{"ruleId":"106","severity":1,"message":"107","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":13},{"ruleId":"106","severity":1,"message":"110","line":6,"column":9,"nodeType":"108","messageId":"109","endLine":6,"endColumn":18},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":7,"column":13,"nodeType":"105","endLine":9,"endColumn":30},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"111","replacedBy":"121"},{"ruleId":"113","replacedBy":"122"},{"ruleId":"106","severity":1,"message":"123","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"124","line":2,"column":5,"nodeType":"108","messageId":"109","endLine":2,"endColumn":25},{"ruleId":"106","severity":1,"message":"125","line":4,"column":5,"nodeType":"108","messageId":"109","endLine":4,"endColumn":35},{"ruleId":"106","severity":1,"message":"126","line":8,"column":5,"nodeType":"108","messageId":"109","endLine":8,"endColumn":23},{"ruleId":"106","severity":1,"message":"127","line":9,"column":5,"nodeType":"108","messageId":"109","endLine":9,"endColumn":32},{"ruleId":"111","replacedBy":"128"},{"ruleId":"113","replacedBy":"129"},{"ruleId":"106","severity":1,"message":"130","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"106","severity":1,"message":"131","line":2,"column":9,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"106","severity":1,"message":"132","line":2,"column":24,"nodeType":"108","messageId":"109","endLine":2,"endColumn":35},{"ruleId":"106","severity":1,"message":"123","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'StoreType' is defined but never used.","no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["133"],["134"],["133"],["134"],"'state' is defined but never used.","'addPostActionCreator' is defined but never used.","'UpdateNewPostTextActionCreator' is defined but never used.","'SendMessageCreator' is defined but never used.","'UpdateNewMessageBodyCreator' is defined but never used.",["133"],["134"],"'dialoguesReducer' is defined but never used.","'DialoguesType' is defined but never used.","'MessageType' is defined but never used.","no-global-assign","no-unsafe-negation"]