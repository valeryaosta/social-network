[{"D:\\STUDY\\social-network\\src\\App.tsx":"1","D:\\STUDY\\social-network\\src\\Profile\\ProfileInfo\\ProfileContainer.tsx":"2","D:\\STUDY\\social-network\\src\\Redux\\users-reducer.tsx":"3","D:\\STUDY\\social-network\\src\\Users\\UsersContainer.tsx":"4","D:\\STUDY\\social-network\\src\\API\\api.tsx":"5","D:\\STUDY\\social-network\\src\\Users\\UserSS.tsx":"6","D:\\STUDY\\social-network\\src\\Redux\\profile-reducer.tsx":"7","D:\\STUDY\\social-network\\src\\Redux\\auth-reducer.tsx":"8","D:\\STUDY\\social-network\\src\\Header\\HeaderContainer.tsx":"9","D:\\STUDY\\social-network\\src\\Common Components\\Preloader\\Preloader.tsx":"10","D:\\STUDY\\social-network\\src\\Navbar\\Navbar.tsx":"11","D:\\STUDY\\social-network\\src\\Login\\Login.tsx":"12","D:\\STUDY\\social-network\\src\\Dialogues\\DialogsContainer.tsx":"13","D:\\STUDY\\social-network\\src\\Dialogues\\Dialogs.tsx":"14","D:\\STUDY\\social-network\\src\\Redux\\dialogs-reducer.tsx":"15","D:\\STUDY\\social-network\\src\\Redux\\redux-store.tsx":"16","D:\\STUDY\\social-network\\src\\Redux\\sidebar-reducer.tsx":"17","D:\\STUDY\\social-network\\src\\HOC\\AuthWithRedirect.tsx":"18","D:\\STUDY\\social-network\\src\\Profile\\MyPosts\\Post\\Post.tsx":"19"},{"size":1328,"mtime":1618598818396,"results":"20","hashOfConfig":"21"},{"size":1582,"mtime":1618674301347,"results":"22","hashOfConfig":"21"},{"size":5859,"mtime":1617643703436,"results":"23","hashOfConfig":"21"},{"size":3286,"mtime":1618674211318,"results":"24","hashOfConfig":"21"},{"size":984,"mtime":1617644065395,"results":"25","hashOfConfig":"21"},{"size":3873,"mtime":1617645378617,"results":"26","hashOfConfig":"21"},{"size":2391,"mtime":1617646470518,"results":"27","hashOfConfig":"21"},{"size":1371,"mtime":1617648501795,"results":"28","hashOfConfig":"21"},{"size":1224,"mtime":1617649152025,"results":"29","hashOfConfig":"21"},{"size":195,"mtime":1617545735152,"results":"30","hashOfConfig":"21"},{"size":1126,"mtime":1617545735171,"results":"31","hashOfConfig":"21"},{"size":106,"mtime":1617724173372,"results":"32","hashOfConfig":"21"},{"size":1264,"mtime":1618674227678,"results":"33","hashOfConfig":"21"},{"size":1557,"mtime":1618674221254,"results":"34","hashOfConfig":"21"},{"size":1869,"mtime":1617728214827,"results":"35","hashOfConfig":"21"},{"size":787,"mtime":1617728076382,"results":"36","hashOfConfig":"21"},{"size":387,"mtime":1617545735198,"results":"37","hashOfConfig":"21"},{"size":821,"mtime":1618599415692,"results":"38","hashOfConfig":"21"},{"size":564,"mtime":1617545735178,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"pm9gsj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\STUDY\\social-network\\src\\App.tsx",[],["84","85"],"D:\\STUDY\\social-network\\src\\Profile\\ProfileInfo\\ProfileContainer.tsx",[],"D:\\STUDY\\social-network\\src\\Redux\\users-reducer.tsx",["86","87","88","89","90","91","92","93"],"import usersAPI from \"../API/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {StoreType} from \"./redux-store\";\r\n\r\nexport type locationUsersType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type photosUsersType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type oneUserType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    location: locationUsersType\r\n    photos: photosUsersType\r\n    //uniqueUrlName: string | null\r\n}\r\n\r\nexport type InitialUsersType = {\r\n    users: Array<oneUserType>\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nexport const initialUsersState: InitialUsersType = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialUsersState, action: UsersActionsType): InitialUsersType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case \"SET-TOTAL-USERS-COUNT\":\r\n            return {\r\n                ...state, totalUsersCount: action.totalCount\r\n            }\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"TOGGLE-IS-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type UsersActionsType =\r\n    | ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport const followSuccess = (userId: number) => ({\r\n    type: 'FOLLOW',\r\n    userId: userId\r\n} as const)\r\n\r\nexport const unfollowSuccess = (userId: number) => ({\r\n    type: 'UNFOLLOW',\r\n    userId: userId\r\n} as const)\r\n\r\nexport const setUsers = (users: Array<oneUserType>) => ({\r\n    type: 'SET-USERS',\r\n    users: users\r\n} as const)\r\n\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: 'SET-CURRENT-PAGE',\r\n    currentPage: currentPage\r\n} as const)\r\n\r\nexport const setTotalUsersCount = (totalCount: number) => ({\r\n    type: 'SET-TOTAL-USERS-COUNT',\r\n    totalCount: totalCount\r\n} as const)\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE-IS-FETCHING',\r\n    isFetching: isFetching\r\n} as const)\r\n\r\nexport const toggleFollowingProgress = (followingInProgress: boolean, userId: number) => ({\r\n    type: 'TOGGLE-IS-FOLLOWING-PROGRESS',\r\n    followingInProgress: followingInProgress,\r\n    userId: userId\r\n} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    //dispatch: Dispatch<UsersActionsType>, getState: () => StoreType\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            })\r\n            .finally(() => {\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId: number) => {\r\n    //dispatch: Dispatch<UsersActionsType>, getState: () => StoreType\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.followUser(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId: number) => {\r\n    //dispatch: Dispatch<UsersActionsType>, getState: () => StoreType\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollowUser(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","D:\\STUDY\\social-network\\src\\Users\\UsersContainer.tsx",[],"D:\\STUDY\\social-network\\src\\API\\api.tsx",["94"],"D:\\STUDY\\social-network\\src\\Users\\UserSS.tsx",["95"],"import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport people from \"../Assets/Images/people.png\";\r\nimport {oneUserType} from \"../Redux/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport type PropsType = {\r\n    users: Array<oneUserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n    //toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n}\r\n//new version functional component\r\nlet UserS = (props: PropsType) => {\r\n    let pagesCount = Math.ceil (props.totalUsersCount/ props.pageSize);\r\n    let pages = [];\r\n    for(let i=1; i<= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map( p  => {\r\n                return <span className={props.currentPage === p ? styles.selectedPage: ''}\r\n                             onClick={(event)=> {props.onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : people} className={styles.userPhoto}\r\n                         alt='image'/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {props.unfollow(u.id);\r\n                         /*   usersAPI.unfollowUser(u.id)\r\n                                .then(data => {\r\n                                    if (data.resultCode === 0){\r\n                                        props.unfollow(u.id);\r\n                                    }\r\n                           props.toggleFollowingProgress(false, u.id);\r\n                                })*/\r\n                        }}>Unfollow</button>\r\n                        : <button  disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                   onClick={() => {props.follow(u.id);\r\n                          /*  usersAPI.followUser(u.id)\r\n                                .then(data => {\r\n                                    if (data.resultCode === 0){\r\n                                        props.follow(u.id);\r\n                                    }\r\n                                    props.toggleFollowingProgress(false, u.id);\r\n\r\n                                })*/\r\n                           /* axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {},\r\n                                {withCredentials: true,\r\n                                    headers: {\r\n                                        'API-KEY': 'dbddbad0-5fc7-4e37-91bc-35e6e35f65ef'\r\n                                    }\r\n                                })\r\n                                .then(response => {\r\n                                    if (response.data.resultCode === 0){\r\n                                        props.follow(u.id);\r\n                                    }\r\n                                })*/\r\n\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n                <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.city\"}</div>\r\n                    <div>{\"u.location.country\"}</div>\r\n                </span>\r\n            </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default UserS;","D:\\STUDY\\social-network\\src\\Redux\\profile-reducer.tsx",[],"D:\\STUDY\\social-network\\src\\Redux\\auth-reducer.tsx",[],"D:\\STUDY\\social-network\\src\\Header\\HeaderContainer.tsx",["96"],"import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreType} from \"../Redux/redux-store\";\r\nimport {getAuthUserData, setAuthUserData} from \"../Redux/auth-reducer\";\r\n\r\n\r\ntype MSTPType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\nexport type MDTPType = {\r\n    //setAuthUserData: (id: number, email: string, login: string) => void\r\n    getAuthUserData: () => void\r\n}\r\n\r\nexport type HeaderContainerPropsType = MSTPType & MDTPType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n        /* authAPI.me()\r\n              .then(response => {\r\n                  if(response.data.resultCode === 0){\r\n                      let {id, email, login} = response.data.data;\r\n                      this.props.setAuthUserData(id, email, login)\r\n                  }\r\n              })*/\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: StoreType): MSTPType => ({\r\n    isAuth: state.authState.isAuth,\r\n    login: state.authState.login\r\n})\r\n\r\n\r\nexport default connect(MapStateToProps, {getAuthUserData})(HeaderContainer);","D:\\STUDY\\social-network\\src\\Common Components\\Preloader\\Preloader.tsx",["97"],"D:\\STUDY\\social-network\\src\\Navbar\\Navbar.tsx",[],"D:\\STUDY\\social-network\\src\\Login\\Login.tsx",[],"D:\\STUDY\\social-network\\src\\Dialogues\\DialogsContainer.tsx",[],"D:\\STUDY\\social-network\\src\\Dialogues\\Dialogs.tsx",[],"D:\\STUDY\\social-network\\src\\Redux\\dialogs-reducer.tsx",[],"D:\\STUDY\\social-network\\src\\Redux\\redux-store.tsx",[],["98","99"],"D:\\STUDY\\social-network\\src\\Redux\\sidebar-reducer.tsx",["100","101","102"],"import dialogsReducer from \"./dialogs-reducer\";\r\nimport {DialogsType, MessageType} from \"./store\";\r\n\r\n\r\ntype InitialSidebarType = {};\r\n\r\nexport const InitialSidebarState = {};\r\n\r\nconst sidebarReducer = (state: InitialSidebarType = InitialSidebarState, action: ActionsSidebarType) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;\r\n\r\nexport type ActionsSidebarType = any;\r\n\r\n\r\n","D:\\STUDY\\social-network\\src\\HOC\\AuthWithRedirect.tsx",[],"D:\\STUDY\\social-network\\src\\Profile\\MyPosts\\Post\\Post.tsx",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":9,"nodeType":"110","messageId":"111","endLine":3,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":34,"column":7,"nodeType":"110","messageId":"111","endLine":34,"endColumn":13},{"ruleId":"108","severity":1,"message":"113","line":35,"column":7,"nodeType":"110","messageId":"111","endLine":35,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":36,"column":7,"nodeType":"110","messageId":"111","endLine":36,"endColumn":16},{"ruleId":"108","severity":1,"message":"115","line":37,"column":7,"nodeType":"110","messageId":"111","endLine":37,"endColumn":23},{"ruleId":"108","severity":1,"message":"116","line":38,"column":7,"nodeType":"110","messageId":"111","endLine":38,"endColumn":28},{"ruleId":"108","severity":1,"message":"117","line":39,"column":7,"nodeType":"110","messageId":"111","endLine":39,"endColumn":25},{"ruleId":"108","severity":1,"message":"118","line":40,"column":7,"nodeType":"110","messageId":"111","endLine":40,"endColumn":35},{"ruleId":"108","severity":1,"message":"119","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":38,"column":21,"nodeType":"122","endLine":39,"endColumn":39},{"ruleId":"108","severity":1,"message":"123","line":5,"column":26,"nodeType":"110","messageId":"111","endLine":5,"endColumn":41},{"ruleId":"124","severity":1,"message":"125","line":5,"column":18,"nodeType":"122","endLine":5,"endColumn":40},{"ruleId":"104","replacedBy":"126"},{"ruleId":"106","replacedBy":"127"},{"ruleId":"108","severity":1,"message":"128","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":22},{"ruleId":"108","severity":1,"message":"129","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":20},{"ruleId":"108","severity":1,"message":"130","line":2,"column":22,"nodeType":"110","messageId":"111","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":13,"column":17,"nodeType":"122","endLine":13,"endColumn":109},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'StoreType' is defined but never used.","Identifier","unusedVar","'FOLLOW' is assigned a value but never used.","'UNFOLLOW' is assigned a value but never used.","'SET_USERS' is assigned a value but never used.","'SET_CURRENT_PAGE' is assigned a value but never used.","'SET_TOTAL_USERS_COUNT' is assigned a value but never used.","'TOGGLE_IS_FETCHING' is assigned a value but never used.","'TOGGLE_IS_FOLLOWING_PROGRESS' is assigned a value but never used.","'React' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setAuthUserData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["131"],["132"],"'dialogsReducer' is defined but never used.","'DialogsType' is defined but never used.","'MessageType' is defined but never used.","no-global-assign","no-unsafe-negation"]