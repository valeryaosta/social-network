[{"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Users\\UsersContainer.tsx":"1","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\users-reducer.tsx":"2","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\App.tsx":"3","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\profile-reducer.tsx":"4","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Header\\Header.tsx":"5","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Dialogs.tsx":"6","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts.tsx":"7","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts\\Post\\Post.tsx":"8","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\Profile.tsx":"9","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\ProfileInfo\\ProfileInfo.tsx":"10","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\DialogsContainer.tsx":"11","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Message\\Message.tsx":"12","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Navbar\\Navbar.tsx":"13","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Users\\UserSS.tsx":"14","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\sidebar-reducer.tsx":"15","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\redux-store.tsx":"16","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\ProfileInfo\\ProfileContainer.tsx":"17","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\index.tsx":"18","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\dialogs-reducer.tsx":"19","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Common Components\\Preloader\\Preloader.tsx":"20","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPostsContainer.tsx":"21","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\auth-reducer.tsx":"22","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\DialogItem\\DialogsItem.tsx":"23","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Header\\HeaderContainer.tsx":"24","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\API\\api.tsx":"25"},{"size":5005,"mtime":1617399123768,"results":"26","hashOfConfig":"27"},{"size":5787,"mtime":1617398832503,"results":"28","hashOfConfig":"27"},{"size":1182,"mtime":1616253574052,"results":"29","hashOfConfig":"27"},{"size":2120,"mtime":1616175380332,"results":"30","hashOfConfig":"27"},{"size":705,"mtime":1616253740499,"results":"31","hashOfConfig":"27"},{"size":1669,"mtime":1615047444067,"results":"32","hashOfConfig":"27"},{"size":1152,"mtime":1615050088904,"results":"33","hashOfConfig":"27"},{"size":541,"mtime":1611170080048,"results":"34","hashOfConfig":"27"},{"size":417,"mtime":1616175403625,"results":"35","hashOfConfig":"27"},{"size":881,"mtime":1616177616753,"results":"36","hashOfConfig":"27"},{"size":908,"mtime":1614968045700,"results":"37","hashOfConfig":"27"},{"size":282,"mtime":1614873453333,"results":"38","hashOfConfig":"27"},{"size":1094,"mtime":1615919513650,"results":"39","hashOfConfig":"27"},{"size":3873,"mtime":1617399818611,"results":"40","hashOfConfig":"27"},{"size":387,"mtime":1614965218560,"results":"41","hashOfConfig":"27"},{"size":955,"mtime":1617399965274,"results":"42","hashOfConfig":"27"},{"size":1899,"mtime":1616245453860,"results":"43","hashOfConfig":"27"},{"size":515,"mtime":1614963499015,"results":"44","hashOfConfig":"27"},{"size":1811,"mtime":1614967487084,"results":"45","hashOfConfig":"27"},{"size":195,"mtime":1615923389204,"results":"46","hashOfConfig":"27"},{"size":827,"mtime":1616253656260,"results":"47","hashOfConfig":"27"},{"size":995,"mtime":1616253224297,"results":"48","hashOfConfig":"27"},{"size":414,"mtime":1614873453444,"results":"49","hashOfConfig":"27"},{"size":1279,"mtime":1616253628383,"results":"50","hashOfConfig":"27"},{"size":1018,"mtime":1616271000159,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kxwy9c",{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Users\\UsersContainer.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\users-reducer.tsx",["117","118","119","120","121","122","123"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\App.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\profile-reducer.tsx",[],["124","125"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Header\\Header.tsx",["126"],"import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\n\n\nconst Header = (props: HeaderContainerPropsType) => {\n    return (\n        <header className={s.header}>\n            <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Unofficial_JavaScript_logo.svg/480px-Unofficial_JavaScript_logo.svg.png\"\n                alt=\"image\"/>\n            <div className={s.loginBlock}>\n               {props.isAuth ? props.login\n                    : <NavLink to={'/login'}>Login</NavLink>\n                }\n            </div>\n        </header>\n    )\n}\n\nexport default Header;\n",["127","128"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Dialogs.tsx",[],["129","130"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts.tsx",[],["131","132"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPosts\\Post\\Post.tsx",["133"],"import React from 'react';\nimport s from './Post.module.css';\n\ntype MessageType = {\n    message: string;\n    likesCount: number;\n}\n\nconst Post: React.FC<MessageType> = (props) => {\n    return (\n        <div className={s.item}>\n            <div>\n                <img src=\"https://image.tmdb.org/t/p/w300_and_h450_bestv2/guNQz8J5NFsBrUS8JwXVoB8yvCE.jpg\"/>\n                {props.message}\n            </div>\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\Profile.tsx",[],["134","135"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\ProfileInfo\\ProfileInfo.tsx",["136"],"import React from 'react';\nimport s from '../ProfileInfo.module.css';\nimport Preloader from \"../../Common Components/Preloader/Preloader\";\nimport {ProfileType} from \"../../Redux/store\";\n\ntype ProfileInfoType = {\n    profile: ProfileType | null\n}\n\nconst ProfileInfo = (props: ProfileInfoType) => {\n    if(!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div>\n                <img\n                    src=\"https://images.glaciermedia.ca/polopoly_fs/1.23204558.1557950041!/fileImage/httpImage/image.jpg_gen/derivatives/landscape_804/northern-lights.jpg\"\n                    alt=\"bigImage\" className={s.img}/>\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large} />\n\n                ava+description\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\DialogsContainer.tsx",["137"],"import React from 'react';\nimport \"./Dialogs.module.css\";\nimport {SendMessageCreator, UpdateNewMessageBodyCreator} from \"../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {ActionTypes, RootStateType} from \"../Redux/store\";\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state: RootStateType) => {\n    return {\n        dialogs: state.dialogsPage.dialogues,\n        messages: state.dialogsPage.messages,\n        newMessageBody: state.dialogsPage.newMessageBody\n    }\n}\n\nconst mapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\n    return {\n        updateNewMessageBody: (body: string) => {\n            dispatch(UpdateNewMessageBodyCreator(body))\n        },\n        sendMessage: () => {\n            dispatch(SendMessageCreator())\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\nexport default DialogsContainer\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\Message\\Message.tsx",["138"],"import React from 'react';\nimport s from \"../Dialogs.module.css\";\nimport state from \"../../Redux/store\";\n\ntype MessageType = {\n    message: string\n}\nconst Message = (props: MessageType) => {\n    return <div className={s.message}>{props.message}</div>\n    }\n\nexport default Message;\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Navbar\\Navbar.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Users\\UserSS.tsx",["139"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\sidebar-reducer.tsx",["140","141","142"],"import dialogsReducer from \"./dialogs-reducer\";\r\nimport {DialogsType, MessageType} from \"./store\";\r\n\r\n\r\ntype InitialSidebarType = {};\r\n\r\nexport const InitialSidebarState = {};\r\n\r\nconst sidebarReducer = (state: InitialSidebarType = InitialSidebarState, action: ActionsSidebarType) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;\r\n\r\nexport type ActionsSidebarType = any;\r\n\r\n\r\n",["143","144"],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\redux-store.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\ProfileInfo\\ProfileContainer.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\index.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\dialogs-reducer.tsx",["145"],"import state, {\r\n    DialogsType, MessageType\r\n} from \"./store\";\r\n\r\ntype InitialDialogType = {\r\n    dialogues: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    newMessageBody: string\r\n}\r\n\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const InitialDialogState: InitialDialogType = {\r\n    dialogues: [\r\n        {id: 1, name: \"Valery\"},\r\n        {id: 2, name: \"Eugene\"},\r\n        {id: 3, name: \"Kseniya\"},\r\n        {id: 4, name: \"Vitaliy\"},\r\n        {id: 5, name: \"Oksana\"},\r\n        {id: 6, name: \"Ellina\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hey, cutiee\"},\r\n        {id: 2, message: \"What's uuup?!\"},\r\n        {id: 3, message: \"Yo bro!\"},\r\n        {id: 4, message: \"God damn!!\"},\r\n        {id: 5, message: \"That's nicee..\"}\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nconst dialogsReducer = (state = InitialDialogState, action: DialogsActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type DialogsActionsTypes =\r\n    | ReturnType<typeof SendMessageCreator>\r\n    | ReturnType<typeof UpdateNewMessageBodyCreator>\r\n\r\nexport const SendMessageCreator = () => ({\r\n    type: 'SEND-MESSAGE'\r\n} as const)\r\n\r\nexport const UpdateNewMessageBodyCreator = (body: string): any => ({\r\n    type: 'UPDATE-NEW-MESSAGE-BODY',\r\n    body: body,\r\n} as const)\r\n\r\nexport default dialogsReducer;\r\n","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Common Components\\Preloader\\Preloader.tsx",["146"],"import React from 'react';\r\nimport preloader from \"../../Assets/Images/preloader.svg\";\r\n\r\nconst Preloader = () => {\r\n    return <div> <img src={preloader}/> </div>\r\n}\r\n\r\nexport default Preloader;","D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Profile\\MyPostsContainer.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Redux\\auth-reducer.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Dialogues\\DialogItem\\DialogsItem.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\Header\\HeaderContainer.tsx",[],"D:\\react-samurai\\projects\\01-first-ts\\my-app\\src\\API\\api.tsx",["147"],"import React from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {'API-KEY': 'dbddbad0-5fc7-4e37-91bc-35e6e35f65ef'}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number)  {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    followUser(id: number) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollowUser(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n/*const getUsers = (currentPage: number, pageSize: number) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n}*/\r\n\r\nexport default usersAPI;",{"ruleId":"148","severity":1,"message":"149","line":34,"column":7,"nodeType":"150","messageId":"151","endLine":34,"endColumn":13},{"ruleId":"148","severity":1,"message":"152","line":35,"column":7,"nodeType":"150","messageId":"151","endLine":35,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":36,"column":7,"nodeType":"150","messageId":"151","endLine":36,"endColumn":16},{"ruleId":"148","severity":1,"message":"154","line":37,"column":7,"nodeType":"150","messageId":"151","endLine":37,"endColumn":23},{"ruleId":"148","severity":1,"message":"155","line":38,"column":7,"nodeType":"150","messageId":"151","endLine":38,"endColumn":28},{"ruleId":"148","severity":1,"message":"156","line":39,"column":7,"nodeType":"150","messageId":"151","endLine":39,"endColumn":25},{"ruleId":"148","severity":1,"message":"157","line":40,"column":7,"nodeType":"150","messageId":"151","endLine":40,"endColumn":35},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":10,"column":13,"nodeType":"164","endLine":12,"endColumn":30},{"ruleId":"158","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"158","replacedBy":"167"},{"ruleId":"160","replacedBy":"168"},{"ruleId":"158","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":13,"column":17,"nodeType":"164","endLine":13,"endColumn":109},{"ruleId":"158","replacedBy":"173"},{"ruleId":"160","replacedBy":"174"},{"ruleId":"171","severity":1,"message":"172","line":23,"column":17,"nodeType":"164","endLine":23,"endColumn":57},{"ruleId":"148","severity":1,"message":"175","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":13},{"ruleId":"148","severity":1,"message":"176","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":38,"column":21,"nodeType":"164","endLine":39,"endColumn":39},{"ruleId":"148","severity":1,"message":"177","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":22},{"ruleId":"148","severity":1,"message":"178","line":2,"column":9,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"179","line":2,"column":22,"nodeType":"150","messageId":"151","endLine":2,"endColumn":33},{"ruleId":"158","replacedBy":"180"},{"ruleId":"160","replacedBy":"181"},{"ruleId":"148","severity":1,"message":"176","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":5,"column":18,"nodeType":"164","endLine":5,"endColumn":40},{"ruleId":"148","severity":1,"message":"175","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'FOLLOW' is assigned a value but never used.","Identifier","unusedVar","'UNFOLLOW' is assigned a value but never used.","'SET_USERS' is assigned a value but never used.","'SET_CURRENT_PAGE' is assigned a value but never used.","'SET_TOTAL_USERS_COUNT' is assigned a value but never used.","'TOGGLE_IS_FETCHING' is assigned a value but never used.","'TOGGLE_IS_FOLLOWING_PROGRESS' is assigned a value but never used.","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["182"],["183"],["182"],["183"],["182"],["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["182"],["183"],"'React' is defined but never used.","'state' is defined but never used.","'dialogsReducer' is defined but never used.","'DialogsType' is defined but never used.","'MessageType' is defined but never used.",["182"],["183"],"no-global-assign","no-unsafe-negation"]